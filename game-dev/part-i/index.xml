<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Part I on MCPT Learning Resources</title><link>https://learning.mcpt.ca/game-dev/part-i/</link><description>Recent content in Part I on MCPT Learning Resources</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://learning.mcpt.ca/game-dev/part-i/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://learning.mcpt.ca/game-dev/part-i/introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/introduction/</guid><description>Game Dev - Season IV Welcome to the return of MCPT&amp;rsquo;s Game Dev Series! The Game Dev Series consists of 3 parts where we have something for everyone, whether you’re a beginner or an experienced coder.
Inspired by Bloons Tower Defense, you will learn how to code your very own tower-defense game in Processing by the end of a series of workshops.
What is a tower-defense game? InfoA tower-defense game is a type of strategy game where players will place down &amp;ldquo;towers&amp;rdquo;, usually with a form of in-game currency that will defend against a set of enemies.</description></item><item><title>Drag And Drop</title><link>https://learning.mcpt.ca/game-dev/part-i/draganddrop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/draganddrop/</guid><description>Drag and Drop Template DragAndDropTemplate.zip (2 KB) Graphic Interface The drag and drop interface for this game contains a pick up region for the user to pick up towers and a trash box for the user to cancel the pick-up. To pick up a tower, simply click within the light-green pick-up box, drag the tower to a valid position on the field, and release the mouse key. Notice that it will not allow you to place the towers directly on the balloon path.</description></item><item><title>Rotating Towers</title><link>https://learning.mcpt.ca/game-dev/part-i/towers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/towers/</guid><description>What You&amp;rsquo;ll Learn In this section, we will break down the process of rotating towers so that they always face a balloon.
We will talk about the drawTowerIcon() function staring on line 79 of Towers.pde
Key Concepts Understanding slope of a line and how it can help determine direction Using the components of slope to come up with an angle of rotation Using the angle of rotation to rotate the tower Remember that in Processing, Y values increase as you move down the window.</description></item><item><title>Path For Balloons</title><link>https://learning.mcpt.ca/game-dev/part-i/pathforballoons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/pathforballoons/</guid><description>Path For Balloons Template PathTemplate.zip (886 B) Prerequisite - Dynamic Arrays To create a path for balloons, you will have to learn about a commonly used tool that will aid you greatly in your quest to make the perfect tower defense: ArrayLists.
ArrayLists While useful, arrays have a fatal flaw: they require for the user to set a static size, making adding an arbitrary number of elements challenging.</description></item><item><title>Balloon Waves</title><link>https://learning.mcpt.ca/game-dev/part-i/updatingballoons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/updatingballoons/</guid><description>Updating Balloons Template BalloonWavesTemplate.zip (3 KB) What You&amp;rsquo;ll Learn A quick note, all line numbers referenced in this page will refer to the lines in Balloons.pde, which you can find at Game-Dev Github.
In this tutorial, you&amp;rsquo;ll learn how to send balloons in waves, and further understand how the ArrayList storing balloons functions. Quick Review!As we’ve already learned, ArrayLists are similar to arrays, however they allow for easier adding/removing of elements from the list.</description></item><item><title>Health Bar</title><link>https://learning.mcpt.ca/game-dev/part-i/healthchecking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/healthchecking/</guid><description>Health Checking Template HealthBarTemplate.zip (2 KB) What You&amp;rsquo;ll Learn In this section, you’ll learn how to implement a system that checks if the balloon has reached the end of the path, then remove it from the waves ArrayList. The Functions 1. Checking if the Balloon is at the End of the Path The method has a parameter of the distance travelled by the current balloon, or distanceTravelled. It is a boolean function, meaning that it returns either a True or False to the user.</description></item><item><title>Tower Validity Checking</title><link>https://learning.mcpt.ca/game-dev/part-i/towervaliditychecking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/game-dev/part-i/towervaliditychecking/</guid><description>Tower Validity Checking Template TowerValidityTemplate.zip (3 KB) Checking Overlaps One of the main things we need to make sure of is that our towers aren&amp;rsquo;t being placed in illegal areas. We don&amp;rsquo;t want a million towers on top of each other or towers that are on our balloon&amp;rsquo;s path. When dragging and dropping our towers, we made sure to show visually whether the tower is in a legal area or not.</description></item></channel></rss>