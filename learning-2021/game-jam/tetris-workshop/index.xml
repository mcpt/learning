<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tetris Workshop on MCPT Learning Resources</title><link>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/</link><description>Recent content in Tetris Workshop on MCPT Learning Resources</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Oriented Programming</title><link>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/object-oriented-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/object-oriented-programming/</guid><description>What is a class? A class is a user-defined data type which can be used when primitive/basic data types (such as int or char) are not enough to satisfy the needs of the program. It allows the programmer to combine multiple primitive or user-defined data types into one single data type.
What is an object? An object is an instance of a class. Think of the class as the &amp;ldquo;blueprint&amp;rdquo; for the object.</description></item><item><title>Multi-Dimensional Arrays</title><link>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/multi-dimensional-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/multi-dimensional-arrays/</guid><description>Array Review If you&amp;rsquo;ve been tuning in to the Competitive Branch&amp;rsquo;s lessons, you probably have had some sort of introduction to arrays. We&amp;rsquo;ll give another quick rundown of arrays and then hop right into multi-dimensional arrays.
Concept of Arrays Arrays are an arrangement of items of a certain data type. These can range from integers, floating point numbers, strings, and even objects. You can think of this as a sort of line of items, and you can items at any position.</description></item><item><title>Multi-Threading</title><link>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/threads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/threads/</guid><description>Threads A thread in a program is a task. All programs have a &amp;ldquo;main&amp;rdquo; thread which controls everything that happens, including separate threads. Separate threads run alongside the main thread, similar to multitasking.
In Java, threads are objects that can be created from the Thread class. To do so, you need to create a subclass of the Thread class.
Threads in Java require two things: a constructor and a run() method.</description></item><item><title>Tetris</title><link>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/tetris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://learning.mcpt.ca/learning-2021/game-jam/tetris-workshop/tetris/</guid><description>Let&amp;rsquo;s now relate everything back to implementing Tetris. There are a few main concepts that a Tetris game needs:
Game Grid (landed array) Representation of our tetrominoes with OOP and multi-dimensional arrays Using multiple threads to detect inputs and bring down blocks at the same time Let&amp;rsquo;s look at each part separately and see how we can apply the knowledge we&amp;rsquo;ve learned to create each part.
Game Grid In Tetris, we have a two dimensional grid that represents our game grid.</description></item></channel></rss>